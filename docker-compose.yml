version: '3.8'

services:
  db:
    image: postgis/postgis:16-3.4
    container_name: zones-db
    environment:
      POSTGRES_DB: industria
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zones-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: zones-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/industria
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks:
      - zones-network

  frontend:
    build:
      context: ./Front-End
      dockerfile: Dockerfile
    container_name: zones-frontend
    volumes:
      # Monter le code source
      - ./Front-End:/app
      # Exclure node_modules
      - /app/node_modules
      # Persister les node_modules
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOSTNAME=0.0.0.0
      # Exposed on localhost so the browser can reach the API
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - API_INTERNAL_URL=http://backend:8080
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=supersecretkey123456789
    restart: unless-stopped
    depends_on:
      - backend
    command: sh -c "bun install && bun run dev"
    networks:
      - zones-network

  nginx:
    image: nginx:alpine
    container_name: zones-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - zones-network

networks:
  zones-network:
    driver: bridge

volumes:
  db_data:
  frontend_node_modules:
